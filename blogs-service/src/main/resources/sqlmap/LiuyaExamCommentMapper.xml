<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:323237052
-->
<mapper namespace="com.Westworld.blogs.service.liuyaexamcomment.mapper.LiuyaExamCommentMapper">
    <!-- LiuyaExamComment -->

    <resultMap id="resultMap" type="LiuyaExamComment">
                <id column="id" property="id"/>
                <result column="user_id" property="userId" />
                <result column="exam_id" property="examId" />
                <result column="comment_content" property="commentContent" />
                <result column="comment_up_number" property="commentUpNumber" />
                <result column="comment_accept" property="commentAccept" />
                <result column="comment_createtime" property="commentCreatetime" />
                <result column="comment_down_number" property="commentDownNumber" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="LiuyaExamComment"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="LiuyaExamComment"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="LiuyaExamComment"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="LiuyaExamComment"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="LiuyaExamComment">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="LiuyaExamComment">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="userIdIgnore_ == null or !userIdIgnore_">`user_id`,</if>
            <if test="examIdIgnore_ == null or !examIdIgnore_">`exam_id`,</if>
            <if test="commentContentIgnore_ == null or !commentContentIgnore_">`comment_content`,</if>
            <if test="commentUpNumberIgnore_ == null or !commentUpNumberIgnore_">`comment_up_number`,</if>
            <if test="commentAcceptIgnore_ == null or !commentAcceptIgnore_">`comment_accept`,</if>
            <if test="commentCreatetimeIgnore_ == null or !commentCreatetimeIgnore_">`comment_createtime`,</if>
            <if test="commentDownNumberIgnore_ == null or !commentDownNumberIgnore_">`comment_down_number`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="userIdNotIgnore_ != null and userIdNotIgnore_">`user_id`,</if>
         <if test="examIdNotIgnore_ != null and examIdNotIgnore_">`exam_id`,</if>
         <if test="commentContentNotIgnore_ != null and commentContentNotIgnore_">`comment_content`,</if>
         <if test="commentUpNumberNotIgnore_ != null and commentUpNumberNotIgnore_">`comment_up_number`,</if>
         <if test="commentAcceptNotIgnore_ != null and commentAcceptNotIgnore_">`comment_accept`,</if>
         <if test="commentCreatetimeNotIgnore_ != null and commentCreatetimeNotIgnore_">`comment_createtime`,</if>
         <if test="commentDownNumberNotIgnore_ != null and commentDownNumberNotIgnore_">`comment_down_number`</if>
        </trim>
    </sql>

    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `user_id`,`exam_id`,`comment_content`,`comment_up_number`,`comment_accept`,`comment_createtime`,`comment_down_number`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userId!=null">#{userId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="examId!=null">#{examId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="commentContent!=null">#{commentContent},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="commentUpNumber!=null">#{commentUpNumber},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="commentAccept!=null">#{commentAccept},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="commentCreatetime!=null">#{commentCreatetime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="commentDownNumber!=null">#{commentDownNumber},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="userId!=null">`user_id`,</if>
                <if test="examId!=null">`exam_id`,</if>
                <if test="commentContent!=null">`comment_content`,</if>
                <if test="commentUpNumber!=null">`comment_up_number`,</if>
                <if test="commentAccept!=null">`comment_accept`,</if>
                <if test="commentCreatetime!=null">`comment_createtime`,</if>
                <if test="commentDownNumber!=null">`comment_down_number`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userId!=null">#{userId},</when></choose>
                <choose><when test="examId!=null">#{examId},</when></choose>
                <choose><when test="commentContent!=null">#{commentContent},</when></choose>
                <choose><when test="commentUpNumber!=null">#{commentUpNumber},</when></choose>
                <choose><when test="commentAccept!=null">#{commentAccept},</when></choose>
                <choose><when test="commentCreatetime!=null">#{commentCreatetime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="commentDownNumber!=null">#{commentDownNumber},</when></choose>
        </trim>
    </sql>

    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `user_id`,`exam_id`,`comment_content`,`comment_up_number`,`comment_accept`,`comment_createtime`,`comment_down_number`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userId!=null">#{item.userId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.examId!=null">#{item.examId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.commentContent!=null">#{item.commentContent},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.commentUpNumber!=null">#{item.commentUpNumber},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.commentAccept!=null">#{item.commentAccept},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.commentCreatetime!=null">#{item.commentCreatetime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.commentDownNumber!=null">#{item.commentDownNumber},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.userId!=null">`user_id`,</if>
                <if test="item.examId!=null">`exam_id`,</if>
                <if test="item.commentContent!=null">`comment_content`,</if>
                <if test="item.commentUpNumber!=null">`comment_up_number`,</if>
                <if test="item.commentAccept!=null">`comment_accept`,</if>
                <if test="item.commentCreatetime!=null">`comment_createtime`,</if>
                <if test="item.commentDownNumber!=null">`comment_down_number`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userId!=null">#{item.userId},</when></choose>
                <choose><when test="item.examId!=null">#{item.examId},</when></choose>
                <choose><when test="item.commentContent!=null">#{item.commentContent},</when></choose>
                <choose><when test="item.commentUpNumber!=null">#{item.commentUpNumber},</when></choose>
                <choose><when test="item.commentAccept!=null">#{item.commentAccept},</when></choose>
                <choose><when test="item.commentCreatetime!=null">#{item.commentCreatetime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.commentDownNumber!=null">#{item.commentDownNumber},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="userId!=null">`user_id`=#{userId}</when> <otherwise> `user_id`=NULL</otherwise> </choose>,
                    <choose> <when test="examId!=null">`exam_id`=#{examId}</when> <otherwise> `exam_id`=NULL</otherwise> </choose>,
                    <choose> <when test="commentContent!=null">`comment_content`=#{commentContent}</when> <otherwise> `comment_content`=NULL</otherwise> </choose>,
                    <choose> <when test="commentUpNumber!=null">`comment_up_number`=#{commentUpNumber}</when> <otherwise> `comment_up_number`=NULL</otherwise> </choose>,
                    <choose> <when test="commentAccept!=null">`comment_accept`=#{commentAccept}</when> <otherwise> `comment_accept`=NULL</otherwise> </choose>,
                    <choose> <when test="commentCreatetime!=null">`comment_createtime`=#{commentCreatetime,jdbcType=TIMESTAMP}</when> <otherwise> `comment_createtime`=NULL</otherwise> </choose>,
                    <choose> <when test="commentDownNumber!=null">`comment_down_number`=#{commentDownNumber}</when> <otherwise> `comment_down_number`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="userId!=null">`user_id`=#{userId},</when></choose>
                    <choose><when test="examId!=null">`exam_id`=#{examId},</when></choose>
                    <choose><when test="commentContent!=null">`comment_content`=#{commentContent},</when></choose>
                    <choose><when test="commentUpNumber!=null">`comment_up_number`=#{commentUpNumber},</when></choose>
                    <choose><when test="commentAccept!=null">`comment_accept`=#{commentAccept},</when></choose>
                    <choose><when test="commentCreatetime!=null">`comment_createtime`=#{commentCreatetime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="commentDownNumber!=null">`comment_down_number`=#{commentDownNumber},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.userId!=null">`user_id`=#{item.userId}</when> <otherwise> `user_id`=NULL</otherwise> </choose>,
                    <choose> <when test="item.examId!=null">`exam_id`=#{item.examId}</when> <otherwise> `exam_id`=NULL</otherwise> </choose>,
                    <choose> <when test="item.commentContent!=null">`comment_content`=#{item.commentContent}</when> <otherwise> `comment_content`=NULL</otherwise> </choose>,
                    <choose> <when test="item.commentUpNumber!=null">`comment_up_number`=#{item.commentUpNumber}</when> <otherwise> `comment_up_number`=NULL</otherwise> </choose>,
                    <choose> <when test="item.commentAccept!=null">`comment_accept`=#{item.commentAccept}</when> <otherwise> `comment_accept`=NULL</otherwise> </choose>,
                    <choose> <when test="item.commentCreatetime!=null">`comment_createtime`=#{item.commentCreatetime,jdbcType=TIMESTAMP}</when> <otherwise> `comment_createtime`=NULL</otherwise> </choose>,
                    <choose> <when test="item.commentDownNumber!=null">`comment_down_number`=#{item.commentDownNumber}</when> <otherwise> `comment_down_number`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.userId!=null">`user_id`=#{item.userId},</when></choose>
                    <choose> <when test="item.examId!=null">`exam_id`=#{item.examId},</when></choose>
                    <choose> <when test="item.commentContent!=null">`comment_content`=#{item.commentContent},</when></choose>
                    <choose> <when test="item.commentUpNumber!=null">`comment_up_number`=#{item.commentUpNumber},</when></choose>
                    <choose> <when test="item.commentAccept!=null">`comment_accept`=#{item.commentAccept},</when></choose>
                    <choose> <when test="item.commentCreatetime!=null">`comment_createtime`=#{item.commentCreatetime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.commentDownNumber!=null">`comment_down_number`=#{item.commentDownNumber},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        blogs.liuya_exam_comment
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="userId!=null "> and `user_id` = #{userId}</if>
        <if test="examId!=null "> and `exam_id` = #{examId}</if>
        <if test="commentContent!=null "> and `comment_content` = #{commentContent}</if>
        <if test="commentUpNumber!=null "> and `comment_up_number` = #{commentUpNumber}</if>
        <if test="commentAccept!=null "> and `comment_accept` = #{commentAccept}</if>
        <if test="commentCreatetime!=null "> and `comment_createtime` = #{commentCreatetime,jdbcType=TIMESTAMP}</if>
        <if test="commentDownNumber!=null "> and `comment_down_number` = #{commentDownNumber}</if>
                <if test="idFirst!=null "> and `id` <![CDATA[=]]>
                            #{idFirst}
                </if>
                <if test="userIdFirst!=null "> and `user_id` <![CDATA[=]]>
                            #{userIdFirst}
                </if>
                <if test="examIdFirst!=null "> and `exam_id` <![CDATA[=]]>
                            #{examIdFirst}
                </if>
                <if test="commentContentFirst!=null "> and `comment_content` <![CDATA[=]]>
                            #{commentContentFirst}
                </if>
                <if test="commentUpNumberFirst!=null "> and `comment_up_number` <![CDATA[=]]>
                            #{commentUpNumberFirst}
                </if>
                <if test="commentAcceptFirst!=null "> and `comment_accept` <![CDATA[=]]>
                            #{commentAcceptFirst}
                </if>
                <if test="commentCreatetimeFirst!=null "> and `comment_createtime` <![CDATA[>=]]>
                        #{commentCreatetimeFirst,jdbcType=TIMESTAMP}
                </if>
                <if test="commentCreatetimeSecond!=null "> and `comment_createtime` <![CDATA[<=]]>
                        #{commentCreatetimeSecond,jdbcType=TIMESTAMP}
                </if>
                <if test="commentDownNumberFirst!=null "> and `comment_down_number` <![CDATA[=]]>
                            #{commentDownNumberFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'user_id'">  `user_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'exam_id'">  `exam_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'comment_content'">  `comment_content` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'comment_up_number'">  `comment_up_number` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'comment_accept'">  `comment_accept` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'comment_createtime'">  `comment_createtime` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'comment_down_number'">  `comment_down_number` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'user_id desc'"> order by  `user_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'user_id asc'"> order by `user_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'exam_id desc'"> order by  `exam_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'exam_id asc'"> order by `exam_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_content desc'"> order by  `comment_content` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_content asc'"> order by `comment_content` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_up_number desc'"> order by  `comment_up_number` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_up_number asc'"> order by `comment_up_number` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_accept desc'"> order by  `comment_accept` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_accept asc'"> order by `comment_accept` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_createtime desc'"> order by  `comment_createtime` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_createtime asc'"> order by `comment_createtime` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_down_number desc'"> order by  `comment_down_number` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'comment_down_number asc'"> order by `comment_down_number` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
